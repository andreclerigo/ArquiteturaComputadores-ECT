// Generated from Geometrics.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class GeometricsLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, HTMLColor=51, Number=52, 
		ID=53, NEWLINE=54, STRING=55, WS=56, COMMENT=57;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "Hex", "HTMLColor", "Number", "ID", "NEWLINE", "STRING", "WS", 
			"COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'geometrics:'", "'main'", "'import'", "'point'", "'='", "'+'", 
			"'-'", "'*'", "'/'", "'%'", "'('", "')'", "'add'", "'to'", "'remove'", 
			"'translate'", "'rotate'", "'over'", "'figure'", "'{'", "'}'", "'animation'", 
			"'tick is'", "'loop'", "'times'", "'wait'", "'line'", "'circle'", "'rectangle'", 
			"'square'", "'ellipse'", "'color'", "'thickness'", "'filled'", "'yes'", 
			"'no'", "'hidden'", "','", "'red'", "'blue'", "'green'", "'yellow'", 
			"'black'", "'white'", "'cyan'", "'orange'", "'purple'", "'pink'", "'brown'", 
			"'grey'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "HTMLColor", "Number", "ID", "NEWLINE", "STRING", "WS", 
			"COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GeometricsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Geometrics.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;\u01c7\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t"+
		"\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3"+
		"$\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*"+
		"\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63"+
		"\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66"+
		"\6\66\u0193\n\66\r\66\16\66\u0194\3\67\3\67\7\67\u0199\n\67\f\67\16\67"+
		"\u019c\13\67\38\58\u019f\n8\38\38\58\u01a3\n8\39\39\79\u01a7\n9\f9\16"+
		"9\u01aa\139\39\39\39\39\39\39\39\3:\6:\u01b4\n:\r:\16:\u01b5\3:\3:\3;"+
		"\3;\3;\3;\7;\u01be\n;\f;\16;\u01c1\13;\3;\3;\3;\3;\3;\4\u01a8\u01bf\2"+
		"<\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\2i\65k\66m\67"+
		"o8q9s:u;\3\2\7\5\2\62;CHch\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\4\2\13\13"+
		"\"\"\2\u01cc\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3"+
		"\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5\u0083\3\2"+
		"\2\2\7\u0088\3\2\2\2\t\u008f\3\2\2\2\13\u0095\3\2\2\2\r\u0097\3\2\2\2"+
		"\17\u0099\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2\2\25\u009f\3\2\2\2\27"+
		"\u00a1\3\2\2\2\31\u00a3\3\2\2\2\33\u00a5\3\2\2\2\35\u00a9\3\2\2\2\37\u00ac"+
		"\3\2\2\2!\u00b3\3\2\2\2#\u00bd\3\2\2\2%\u00c4\3\2\2\2\'\u00c9\3\2\2\2"+
		")\u00d0\3\2\2\2+\u00d2\3\2\2\2-\u00d4\3\2\2\2/\u00de\3\2\2\2\61\u00e6"+
		"\3\2\2\2\63\u00eb\3\2\2\2\65\u00f1\3\2\2\2\67\u00f6\3\2\2\29\u00fb\3\2"+
		"\2\2;\u0102\3\2\2\2=\u010c\3\2\2\2?\u0113\3\2\2\2A\u011b\3\2\2\2C\u0121"+
		"\3\2\2\2E\u012b\3\2\2\2G\u0132\3\2\2\2I\u0136\3\2\2\2K\u0139\3\2\2\2M"+
		"\u0140\3\2\2\2O\u0142\3\2\2\2Q\u0146\3\2\2\2S\u014b\3\2\2\2U\u0151\3\2"+
		"\2\2W\u0158\3\2\2\2Y\u015e\3\2\2\2[\u0164\3\2\2\2]\u0169\3\2\2\2_\u0170"+
		"\3\2\2\2a\u0177\3\2\2\2c\u017c\3\2\2\2e\u0182\3\2\2\2g\u0187\3\2\2\2i"+
		"\u0189\3\2\2\2k\u0192\3\2\2\2m\u0196\3\2\2\2o\u01a2\3\2\2\2q\u01a4\3\2"+
		"\2\2s\u01b3\3\2\2\2u\u01b9\3\2\2\2wx\7i\2\2xy\7g\2\2yz\7q\2\2z{\7o\2\2"+
		"{|\7g\2\2|}\7v\2\2}~\7t\2\2~\177\7k\2\2\177\u0080\7e\2\2\u0080\u0081\7"+
		"u\2\2\u0081\u0082\7<\2\2\u0082\4\3\2\2\2\u0083\u0084\7o\2\2\u0084\u0085"+
		"\7c\2\2\u0085\u0086\7k\2\2\u0086\u0087\7p\2\2\u0087\6\3\2\2\2\u0088\u0089"+
		"\7k\2\2\u0089\u008a\7o\2\2\u008a\u008b\7r\2\2\u008b\u008c\7q\2\2\u008c"+
		"\u008d\7t\2\2\u008d\u008e\7v\2\2\u008e\b\3\2\2\2\u008f\u0090\7r\2\2\u0090"+
		"\u0091\7q\2\2\u0091\u0092\7k\2\2\u0092\u0093\7p\2\2\u0093\u0094\7v\2\2"+
		"\u0094\n\3\2\2\2\u0095\u0096\7?\2\2\u0096\f\3\2\2\2\u0097\u0098\7-\2\2"+
		"\u0098\16\3\2\2\2\u0099\u009a\7/\2\2\u009a\20\3\2\2\2\u009b\u009c\7,\2"+
		"\2\u009c\22\3\2\2\2\u009d\u009e\7\61\2\2\u009e\24\3\2\2\2\u009f\u00a0"+
		"\7\'\2\2\u00a0\26\3\2\2\2\u00a1\u00a2\7*\2\2\u00a2\30\3\2\2\2\u00a3\u00a4"+
		"\7+\2\2\u00a4\32\3\2\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7f\2\2\u00a7\u00a8"+
		"\7f\2\2\u00a8\34\3\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7q\2\2\u00ab\36"+
		"\3\2\2\2\u00ac\u00ad\7t\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7o\2\2\u00af"+
		"\u00b0\7q\2\2\u00b0\u00b1\7x\2\2\u00b1\u00b2\7g\2\2\u00b2 \3\2\2\2\u00b3"+
		"\u00b4\7v\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7\7p\2\2"+
		"\u00b7\u00b8\7u\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb"+
		"\7v\2\2\u00bb\u00bc\7g\2\2\u00bc\"\3\2\2\2\u00bd\u00be\7t\2\2\u00be\u00bf"+
		"\7q\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2\7v\2\2\u00c2"+
		"\u00c3\7g\2\2\u00c3$\3\2\2\2\u00c4\u00c5\7q\2\2\u00c5\u00c6\7x\2\2\u00c6"+
		"\u00c7\7g\2\2\u00c7\u00c8\7t\2\2\u00c8&\3\2\2\2\u00c9\u00ca\7h\2\2\u00ca"+
		"\u00cb\7k\2\2\u00cb\u00cc\7i\2\2\u00cc\u00cd\7w\2\2\u00cd\u00ce\7t\2\2"+
		"\u00ce\u00cf\7g\2\2\u00cf(\3\2\2\2\u00d0\u00d1\7}\2\2\u00d1*\3\2\2\2\u00d2"+
		"\u00d3\7\177\2\2\u00d3,\3\2\2\2\u00d4\u00d5\7c\2\2\u00d5\u00d6\7p\2\2"+
		"\u00d6\u00d7\7k\2\2\u00d7\u00d8\7o\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da"+
		"\7v\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7p\2\2\u00dd"+
		".\3\2\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7e\2\2\u00e1"+
		"\u00e2\7m\2\2\u00e2\u00e3\7\"\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7u\2"+
		"\2\u00e5\60\3\2\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9"+
		"\7q\2\2\u00e9\u00ea\7r\2\2\u00ea\62\3\2\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed"+
		"\7k\2\2\u00ed\u00ee\7o\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0\7u\2\2\u00f0"+
		"\64\3\2\2\2\u00f1\u00f2\7y\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7k\2\2\u00f4"+
		"\u00f5\7v\2\2\u00f5\66\3\2\2\2\u00f6\u00f7\7n\2\2\u00f7\u00f8\7k\2\2\u00f8"+
		"\u00f9\7p\2\2\u00f9\u00fa\7g\2\2\u00fa8\3\2\2\2\u00fb\u00fc\7e\2\2\u00fc"+
		"\u00fd\7k\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100\7n\2\2"+
		"\u0100\u0101\7g\2\2\u0101:\3\2\2\2\u0102\u0103\7t\2\2\u0103\u0104\7g\2"+
		"\2\u0104\u0105\7e\2\2\u0105\u0106\7v\2\2\u0106\u0107\7c\2\2\u0107\u0108"+
		"\7p\2\2\u0108\u0109\7i\2\2\u0109\u010a\7n\2\2\u010a\u010b\7g\2\2\u010b"+
		"<\3\2\2\2\u010c\u010d\7u\2\2\u010d\u010e\7s\2\2\u010e\u010f\7w\2\2\u010f"+
		"\u0110\7c\2\2\u0110\u0111\7t\2\2\u0111\u0112\7g\2\2\u0112>\3\2\2\2\u0113"+
		"\u0114\7g\2\2\u0114\u0115\7n\2\2\u0115\u0116\7n\2\2\u0116\u0117\7k\2\2"+
		"\u0117\u0118\7r\2\2\u0118\u0119\7u\2\2\u0119\u011a\7g\2\2\u011a@\3\2\2"+
		"\2\u011b\u011c\7e\2\2\u011c\u011d\7q\2\2\u011d\u011e\7n\2\2\u011e\u011f"+
		"\7q\2\2\u011f\u0120\7t\2\2\u0120B\3\2\2\2\u0121\u0122\7v\2\2\u0122\u0123"+
		"\7j\2\2\u0123\u0124\7k\2\2\u0124\u0125\7e\2\2\u0125\u0126\7m\2\2\u0126"+
		"\u0127\7p\2\2\u0127\u0128\7g\2\2\u0128\u0129\7u\2\2\u0129\u012a\7u\2\2"+
		"\u012aD\3\2\2\2\u012b\u012c\7h\2\2\u012c\u012d\7k\2\2\u012d\u012e\7n\2"+
		"\2\u012e\u012f\7n\2\2\u012f\u0130\7g\2\2\u0130\u0131\7f\2\2\u0131F\3\2"+
		"\2\2\u0132\u0133\7{\2\2\u0133\u0134\7g\2\2\u0134\u0135\7u\2\2\u0135H\3"+
		"\2\2\2\u0136\u0137\7p\2\2\u0137\u0138\7q\2\2\u0138J\3\2\2\2\u0139\u013a"+
		"\7j\2\2\u013a\u013b\7k\2\2\u013b\u013c\7f\2\2\u013c\u013d\7f\2\2\u013d"+
		"\u013e\7g\2\2\u013e\u013f\7p\2\2\u013fL\3\2\2\2\u0140\u0141\7.\2\2\u0141"+
		"N\3\2\2\2\u0142\u0143\7t\2\2\u0143\u0144\7g\2\2\u0144\u0145\7f\2\2\u0145"+
		"P\3\2\2\2\u0146\u0147\7d\2\2\u0147\u0148\7n\2\2\u0148\u0149\7w\2\2\u0149"+
		"\u014a\7g\2\2\u014aR\3\2\2\2\u014b\u014c\7i\2\2\u014c\u014d\7t\2\2\u014d"+
		"\u014e\7g\2\2\u014e\u014f\7g\2\2\u014f\u0150\7p\2\2\u0150T\3\2\2\2\u0151"+
		"\u0152\7{\2\2\u0152\u0153\7g\2\2\u0153\u0154\7n\2\2\u0154\u0155\7n\2\2"+
		"\u0155\u0156\7q\2\2\u0156\u0157\7y\2\2\u0157V\3\2\2\2\u0158\u0159\7d\2"+
		"\2\u0159\u015a\7n\2\2\u015a\u015b\7c\2\2\u015b\u015c\7e\2\2\u015c\u015d"+
		"\7m\2\2\u015dX\3\2\2\2\u015e\u015f\7y\2\2\u015f\u0160\7j\2\2\u0160\u0161"+
		"\7k\2\2\u0161\u0162\7v\2\2\u0162\u0163\7g\2\2\u0163Z\3\2\2\2\u0164\u0165"+
		"\7e\2\2\u0165\u0166\7{\2\2\u0166\u0167\7c\2\2\u0167\u0168\7p\2\2\u0168"+
		"\\\3\2\2\2\u0169\u016a\7q\2\2\u016a\u016b\7t\2\2\u016b\u016c\7c\2\2\u016c"+
		"\u016d\7p\2\2\u016d\u016e\7i\2\2\u016e\u016f\7g\2\2\u016f^\3\2\2\2\u0170"+
		"\u0171\7r\2\2\u0171\u0172\7w\2\2\u0172\u0173\7t\2\2\u0173\u0174\7r\2\2"+
		"\u0174\u0175\7n\2\2\u0175\u0176\7g\2\2\u0176`\3\2\2\2\u0177\u0178\7r\2"+
		"\2\u0178\u0179\7k\2\2\u0179\u017a\7p\2\2\u017a\u017b\7m\2\2\u017bb\3\2"+
		"\2\2\u017c\u017d\7d\2\2\u017d\u017e\7t\2\2\u017e\u017f\7q\2\2\u017f\u0180"+
		"\7y\2\2\u0180\u0181\7p\2\2\u0181d\3\2\2\2\u0182\u0183\7i\2\2\u0183\u0184"+
		"\7t\2\2\u0184\u0185\7g\2\2\u0185\u0186\7{\2\2\u0186f\3\2\2\2\u0187\u0188"+
		"\t\2\2\2\u0188h\3\2\2\2\u0189\u018a\7%\2\2\u018a\u018b\5g\64\2\u018b\u018c"+
		"\5g\64\2\u018c\u018d\5g\64\2\u018d\u018e\5g\64\2\u018e\u018f\5g\64\2\u018f"+
		"\u0190\5g\64\2\u0190j\3\2\2\2\u0191\u0193\t\3\2\2\u0192\u0191\3\2\2\2"+
		"\u0193\u0194\3\2\2\2\u0194\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195l\3"+
		"\2\2\2\u0196\u019a\t\4\2\2\u0197\u0199\t\5\2\2\u0198\u0197\3\2\2\2\u0199"+
		"\u019c\3\2\2\2\u019a\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019bn\3\2\2\2"+
		"\u019c\u019a\3\2\2\2\u019d\u019f\7\17\2\2\u019e\u019d\3\2\2\2\u019e\u019f"+
		"\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u01a3\7\f\2\2\u01a1\u01a3\7\2\2\3\u01a2"+
		"\u019e\3\2\2\2\u01a2\u01a1\3\2\2\2\u01a3p\3\2\2\2\u01a4\u01a8\7$\2\2\u01a5"+
		"\u01a7\13\2\2\2\u01a6\u01a5\3\2\2\2\u01a7\u01aa\3\2\2\2\u01a8\u01a9\3"+
		"\2\2\2\u01a8\u01a6\3\2\2\2\u01a9\u01ab\3\2\2\2\u01aa\u01a8\3\2\2\2\u01ab"+
		"\u01ac\7\60\2\2\u01ac\u01ad\7i\2\2\u01ad\u01ae\7g\2\2\u01ae\u01af\7q\2"+
		"\2\u01af\u01b0\7o\2\2\u01b0\u01b1\7$\2\2\u01b1r\3\2\2\2\u01b2\u01b4\t"+
		"\6\2\2\u01b3\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5"+
		"\u01b6\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\b:\2\2\u01b8t\3\2\2\2\u01b9"+
		"\u01ba\7\61\2\2\u01ba\u01bb\7,\2\2\u01bb\u01bf\3\2\2\2\u01bc\u01be\13"+
		"\2\2\2\u01bd\u01bc\3\2\2\2\u01be\u01c1\3\2\2\2\u01bf\u01c0\3\2\2\2\u01bf"+
		"\u01bd\3\2\2\2\u01c0\u01c2\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c2\u01c3\7,"+
		"\2\2\u01c3\u01c4\7\61\2\2\u01c4\u01c5\3\2\2\2\u01c5\u01c6\b;\2\2\u01c6"+
		"v\3\2\2\2\n\2\u0194\u019a\u019e\u01a2\u01a8\u01b5\u01bf\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}